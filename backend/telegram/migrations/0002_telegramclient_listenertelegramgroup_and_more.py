# Generated by Django 4.2.10 on 2024-08-27 15:45

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ('proxies', '0001_initial'),
        ('telegram', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TelegramClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_active', models.BooleanField(default=True)),
                ('api_id', models.PositiveIntegerField()),
                ('api_hash', models.CharField(max_length=255)),
                ('client_session', models.TextField()),
                ('app_json', models.JSONField()),
                ('phone', models.CharField(max_length=30)),
                ('two_fa', models.CharField(max_length=30)),
                ('error', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ListenerTelegramGroup',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('telegram.telegramgroup',),
        ),
        migrations.AlterUniqueTogether(
            name='telegramgroupmessage',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='telegramgroup',
            name='similar_groups',
        ),
        migrations.RemoveField(
            model_name='telegramgroup',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='telegramuser',
            name='app',
        ),
        migrations.RemoveField(
            model_name='telegramuser',
            name='app_json',
        ),
        migrations.RemoveField(
            model_name='telegramuser',
            name='client_session',
        ),
        migrations.RemoveField(
            model_name='telegramuser',
            name='error',
        ),
        migrations.RemoveField(
            model_name='telegramuser',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='telegramuser',
            name='phone',
        ),
        migrations.RemoveField(
            model_name='telegramuser',
            name='proxy_server',
        ),
        migrations.RemoveField(
            model_name='telegramuser',
            name='sex',
        ),
        migrations.RemoveField(
            model_name='telegramuser',
            name='telegram_groups',
        ),
        migrations.RemoveField(
            model_name='telegramuser',
            name='two_fa',
        ),
        migrations.AddField(
            model_name='telegramgroup',
            name='is_listening',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='telegramgroup',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='telegram_groups', to='telegram.telegramuser'),
        ),
        migrations.AlterField(
            model_name='telegramgroup',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='telegramgroup',
            name='username',
            field=models.CharField(max_length=32, unique=True),
        ),
        migrations.AlterField(
            model_name='telegramgroupmessage',
            name='message_id',
            field=models.BigIntegerField(),
        ),
        migrations.AlterField(
            model_name='telegramgroupmessage',
            name='reply_to_msg_id',
            field=models.BigIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='telegramgroupmessage',
            name='text',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='telegramgroupmessage',
            name='user_id',
            field=models.BigIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='telegramuser',
            name='first_name',
            field=models.CharField(blank=True, max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name='telegramuser',
            name='last_name',
            field=models.CharField(blank=True, max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name='telegramuser',
            name='username',
            field=models.CharField(blank=True, max_length=32, null=True, unique=True),
        ),
        migrations.AddIndex(
            model_name='telegramuser',
            index=models.Index(fields=['username'], name='username_idx'),
        ),
        migrations.AddIndex(
            model_name='telegramuser',
            index=models.Index(fields=['first_name'], name='first_name_idx'),
        ),
        migrations.AddIndex(
            model_name='telegramuser',
            index=models.Index(fields=['last_name'], name='last_name_idx'),
        ),
        migrations.AddConstraint(
            model_name='telegramgroupmessage',
            constraint=models.UniqueConstraint(fields=('telegram_group', 'message_id'), name='unique_telegram_group_message_id'),
        ),
        migrations.AddField(
            model_name='telegramclient',
            name='proxy_server',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='telegram_client', to='proxies.proxyserver'),
        ),
        migrations.AddField(
            model_name='telegramclient',
            name='telegram_user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='telegram_client', to='telegram.telegramuser'),
        ),
    ]

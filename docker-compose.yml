version: "3.4"

services:
  postgres:
    image: postgres:12.12-alpine
    container_name: postgres
    restart: always
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - 6379:6379
    # volumes:
    #   - ./redis/d–∞ta:/root/redis
    #   - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - ./.env

  backend:
    image: backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    volumes:
      - ./backend:/home/app/backend
    entrypoint: poetry run bash entrypoint.sh
    env_file:
      - ./.env
    command: poetry run python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - redis

  flower:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    command: poetry run celery -A backend flower
    volumes:
      - .:/home/app
    ports:
      - 5555:5555
    depends_on:
      - postgres
      - redis

  celery_sheduler:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    volumes:
      - ./backend:/home/app/backend
    command: poetry run celery -A core beat -l info
    depends_on:
      - postgres
      - redis

  celery_worker:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    volumes:
      - ./backend:/home/app/backend
    command: poetry run celery -A core worker -l info
    depends_on:
      - postgres
      - redis
